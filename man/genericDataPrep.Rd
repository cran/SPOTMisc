% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/funKerasModular.R
\name{genericDataPrep}
\alias{genericDataPrep}
\title{Create an input pipeline using tfdatasets}
\usage{
genericDataPrep(data, batch_size = 32)
}
\arguments{
\item{data}{data. List, e.g., df$trainCensus, df$testGeneric, and df$valCensus data)}

\item{batch_size}{batch size. Default: 32}
}
\value{
a fitted \code{FeatureSpec} object and the hold-out testGeneric (=data$testGeneric).
This is returned as the follwoing list.
\describe{
  \item{\code{train_ds_generic}}{train}
  \item{\code{val_ds_generic}}{validation}
  \item{\code{test_ds_generic}}{test}
  \item{\code{specGeneric_prep}}{feature spec object}
  \item{\code{testGeneric}}{data$testGeneric}
}
}
\description{
Create an input pipeline using tfdatasets
}
\examples{
\donttest{
target <- "age"
batch_size <- 32
prop <- 2/3
cachedir <- "oml.cache"
dfCensus <- getDataCensus(target = target,
nobs = 1000, cachedir = cachedir, cache.only=FALSE)
data <- getGenericTrainValTestData(dfGeneric = dfCensus,
prop = prop)
specList <- genericDataPrep(data=data, batch_size = batch_size)
## Call iterator:
require(magrittr)
specList$train_ds_generic \%>\%
  reticulate::as_iterator() \%>\%
   reticulate::iter_next()
}

}
